import org.apache.spark.mllib.classification. SVMWithSGD
import org.apache.spark.mllib.evaluation.MulticlassMetrics
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.regression.LabeledPoint
import org.apache.spark.mllib.util.MLUtils
import org.apache.spark.{SparkContext, SparkConf}

object GastriCcancer {
  def main(args: Array[String]) {
val conf = new SparkConf()                                     //建立環境變數
.setMaster("local")                                             //設定本機化處理
.setAppName("SVMTest ")                        		      //設定名稱
    val sc = new SparkContext(conf)                                 //建立環境變數案例

    val data = MLUtils.loadLibSVMFile(sc, "c://wa.txt")				//取得資料集
    val splits = data.randomSplit(Array(0.7, 0.3), seed = 11L)			//對資料集切分
    val parsedData = splits(0)									//分割訓練資料
    val parseTtest = splits(1)									//分割測試資料
    val model = SVMWithSGD.train(parsedData,50)					//訓練模型
    val predictionAndLabels = parseTtest.map { 					//計算測試值
case LabeledPoint(label, features) =>						//計算測試值
 val prediction = model.predict(features)						//計算測試值
      (prediction, label)										//儲存測試和預測值
}

    val metrics = new MulticlassMetrics(predictionAndLabels)			//建立驗證類別
    val precision = metrics.precision								//計算驗證值
    println("Precision = " + precision)							//列印驗證值

    val patient = Vectors.dense(Array(70,3,180.0,4,3))				//計算患者可能性
    if(patient == 1) println("患者的胃癌有機率轉移。")				//做出判斷
      else println("患者的胃癌沒有機率轉移。")					//做出判斷
  }
}
